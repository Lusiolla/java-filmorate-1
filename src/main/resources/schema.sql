-- УДАЛЕНИЕ ВСЕХ ТАБЛИЦ В БД
DROP TABLE IF EXISTS LIKES;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS FEEDS;
DROP TABLE IF EXISTS GENRE_FILM;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS GENRES_FILMS;
DROP TABLE IF EXISTS FILMS_GENRES;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS MPAA CASCADE;
DROP TABLE IF EXISTS FRIENDS CASCADE;


-- СОЗДАНИЕ ТАБЛИЦ
CREATE TABLE IF NOT EXISTS MPAA
(
    MPAA_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR
);


CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR(255),
    DESCRIPTION  VARCHAR(255),
    RELEASE_DATE DATE,
    DURATION     VARCHAR(10),
    MPAA_ID      INT,
        CONSTRAINT FK_MPAA FOREIGN KEY (MPAA_ID) REFERENCES MPAA(MPAA_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR(30) NOT NULL,
    LOGIN    VARCHAR(30) NOT NULL,
    NAME     VARCHAR(30),
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS LIKES
(
    USER_ID BIGINT,
    FILM_ID BIGINT,
    CONSTRAINT LIKES_PK PRIMARY KEY (USER_ID, FILM_ID),
    CONSTRAINT FK_FILMS FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID),
    CONSTRAINT FK_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)

);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    NAME     VARCHAR(50)                             NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES
(
    FILM_ID  BIGINT NOT NULL,
    GENRE_ID INT NOT NULL,
    CONSTRAINT FILMS_GENRES_PK PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT FILMS_GENRES_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID),
    CONSTRAINT FILMS_GENRES_FK_2 FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    FRIEND_ID BIGINT NOT NULL,
    USER_ID   BIGINT NOT NULL,
    CONSTRAINT PK_FRIENDS PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT FK_FRIENDS1 FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID),
    CONSTRAINT FK_FRIENDS2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID)
);


CREATE TABLE IF NOT EXISTS FEEDS
(
    EVENT_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID  BIGINT NOT NULL,
    TIMESTAMP BIGINT,
    EVENT_TYPE VARCHAR(10),
    OPERATION VARCHAR (10),
    ENTITY_ID BIGINT,
    CONSTRAINT FK_FEEDS_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);